package fullstack.objex;
/*
 * Dog, Cat, Duck 클래스의 부모가 되는 클래스 입니다.
 * 이 클래스를 정의한 이유는 위 세개의 클래스가 실제로는 모두 Animal 의 하위
 * 타입 이기때문에 타입으로 묶기 위해서 정의합니다.
 * 
 * 필드로는 이 하위 타입의 특정 객체(instance)가 발생하면 어떤 동물(dog, cat, duck)
 * 이 생성(파생) 되었는지를 알 수 있도록 String type 의 type 필드를 선언합니다.
 * 
 * 
 * 상속(inheritance) : 자바에서의 상속은 정의된 부모 클래스를 확장(extends) 한다는 개념으로
 * 생각하시면 편합니다. 부모 클래스를 확장 하는 자식 클래스는 부모를 super 로 지칭할 수 있고,
 * 부모가 이미 정의된 속성이나 메서드가 자식 입장에서는 필요하고(private 제외), 이것들 외에
 * 추가적으로 필요한 속성이나 메서드를 자식이 정의해서 객체를 만들어 사용하면, 부모의 것도
 * 내것처럼 사용할 수 있다는데 목적이 있습니다.
 * 
 * 매우 중요함.
 * 단 하나의 조건이 있는데, 상속시 자식은 부모의 모든걸(private 제외) 물려 받지만, 단 하나
 * 생성자는 물려받지 못합니다.(정말 중요함).
 * 즉 이 말은 클래스에는 필드, 생성자, 메서드 이렇게 3가지 요소를 정의 하는데, 상속을 하게될 시엔
 * 부모의 생성자는 절대 상속되어지지 않는다는 말입니다. 반드시 기억해야 합니다.
 * 그런데, 상속을 받은 자식 클래스가 인스턴스화 되려면, 반드시 내안에 너가 있어야합니다.
 * 
 * 즉, 내 인스턴스가 생성되기 이전에 부모 인스턴스가 먼저 생성되어야 한다는 말입니다.
 * 생성자는 instance 생성하는 주 역할을 하는 코드이기에, 상속이 되지 않는 부분이 초보자들이
 * 제일 어려워 하는 부분이니, 잘 생각하고 수업 들으세요.
 * 
 * 따라서 부모클래스에서 기본 생성자가 정의되지 않았을 경우엔, 자식 클래스에서는 반드시
 * 자식 생성자 내부에서 부모 클래스 내에 정의 되어진 생성자 중 하나를 명시적으로
 * 호출(super(??)) 해줘야 합니다.
 * 
 * 매우 중요 2 : 클래스간의 상속은 반드시 1 : 1 만 가능합니다.
 * 이 말은 즉, 자식 클래스는 상속 할 부모"클래스" 를 단 하나만 갖을 수 있다는 말입니다.
 * ex> class Son extends A, B ,C --> 이거안됨 부모클래스가 딱 한 개 여야만 가능함.
 * ex> class son extends A --> 이렇게. A 클래스 하나만 상속 했기 때문임.
 */
public abstract class Animal {
	/*
	 * 추상클래스 : 하나이상의 추상 메서드를 보유한 클래스는 반드시 추상화 되어야 합니다.
	 * 이렇게 추상클래스로 선언된 클래스는 일반 클래스와 모두 같지만, 단 하나
	 * 꼭 기억해야 하는건 자신의 instance는 발생시킬수 없습니다. 꼭 기억해야합니다.
	 * 하지만 Super Reference Type 으로는 존재 가능합니다.
	 * 
	 * 추상클래스를 상속한 자식 클래스는 다음 중 하나를 선택해야 합니다.
	 * 1. 추상메서드를 구현(implements) 하지 않을경우 자신이 추상 클래스로
	 * 선언 되어야 합니다.
	 * 2. 추상메서드를 구현 합니다.
	 */
	
	
	//상속(Inheritance)
	//자바에서 부모객체는 Super라고하고 나 자신은 this이다.
	//Super에서 this에게 상속할때 뭐든 다주지만 private는 제외이다.
	//계좌에서 계좌번호처럼 유일하게 있어야되는것을 유니크라고함.
	//확장(extends)
	//상속 = 내(this)안에 너(Super)있다
	
	String type; // 하위 클래스의 어떤 동물이 생성 되었는지를 값으로 갖는 필드.
	
	//하위 타입이 어떤 동물인지를 파악 하도록 하위 타입 인스턴스가 생성될 때,
	//타입값을 문자열로 전달하도록 생성자 정의합니다.
	
	public Animal() {
		
	}
	 
	public Animal(String type) {
		this.type = type;
	}
	
	//하위 동물들이 공통으로 갖는 기능 중 소리를 내는 기능인 sound() 를 정의합니다.
	//sound 의 자신이 필요한게 아니라 하위 클래스가 필요한 즉 상속의 목적입니다.
	//이렇게 상속만을 목적으로 부모 클래스에서 선언한 메서드는 
	//추상화(Abstraction) 의 대상이 됩니다.
	
	public abstract void sound();//메서드를 선언만 한 상태입니다.. 이유는 기능(즉 바디)는
	//Animal 에게 필요하지 않기 때문입니다. 이런 디테일이 빠진상태를 추상메서드라고 함.
	//위처럼 추상 메서드를 선언하게 되면, 즉 설계상 추상메서드를 "하나"이상 갖게되는 클래스는
	//무조건 추상 클래스로 선언이 되어야 합니다. 반드시	
	
	//메서드에 final 이 선언되면 오버라이드 금지입니다.
	public final void finalAnimalMethod() {
		
	}
	
	
	//하위 타입의 인스턴스가 어떤 타입의 동물인지를 문자열로 되돌려 주도록 메서드를
	//정의 합니다.
	
	public String toString() {
		return "이것은 " + type;
	}
}
