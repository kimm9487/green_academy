/*
 * 여기서 배울 내용은 Data Type 부터 배웁니다.
 * 
 * 자바는 데이터 타입이 엄격히 구분되어집니다.
 * 
 * 즉 어떤 값이 존재하려면 메모리가 필요하고 그 메모리에 값이 들어갈때
 * 값의 타입에 따라서 분류를 하게됩니다. 이를 데이터 타입이라고 합니다.
 * 
 * 타입은 크게 2종으로 구분되는데, 반드시 기억하세요!! 반드시.
 * 
 * 1. Primitaive Type(P type) : 이 타입은 객체를 제외한 모든 타입을 말합니다.
 * 종류로는 수치형, 문자형(문자열아님), 불린형 으로 구분되어지고
 * 수치형은 다시 정수형, 실수형으로 구분되어집니다.
 * 수치형은 다시 음수와 양수를 갖도록 되어지기에, 이 모두를 기억하세요.
 * 데이터타입은 여러분이 코드내에서 어떤 값을 대입 또는 초기화 시킬때 그 타입이 맞는 변수에
 * 넣어야 한다는말입니다. 이말은 곧 변수가 처음 선언될때는 반드시 타입이 먼저 선언되어야 
 * 한다는 말입니다. 꼭 기억하세요!
 * 만약 타입이 틀리면 바로 에러입니다.
 * 
 * 
 * 2. Reference Type(R type) : P type 을 제외한 모든 타입은 참조형 즉, 객체 타입을 말합니다.
 * 대표적으로는 문자열값을 담는 String 객체가 있고, 여러분이 이 객체에 대해서 공부할 예정입니다.
 * 
 * int x;//declare
 * 
 * x = 10l//assign
 * 
 * String name = "김규호";
 * 
 * 
 * 이진법
 * 0 --> 십진법으로 0
 * 1 --> 십진법으로 1
 * 
 * 1(2*1)0 --> 십진법으로 2+0 => 2
 * 1(2*1)1 --> 십진법으로 2+1 => 3
 * 
 * 0(2 * 2)1 1 --> 0+2+1 => 3
 * 1(2 * 2)1 1 --> 4+2+1 => 7
 * 
 * 1(2*2*2) 1(2 * 2)1 1 --> 8+4+2+1 => 15
 * 
 * 1(2*2*2*2) 1(2*2*2) 1(2 * 2)1 1 --> 16+15 => 31
 * 
 * 1(2*2*2*2*2) 1(2*2*2*2) 1(2*2*2) 1(2 * 2)1 1 --> 32+31 => 63
 * 
 * 1(2*2*2*2*2*2) 1(2*2*2*2*2) 1(2*2*2*2) 1(2*2*2) 1(2 * 2)1(1*2) 1 --> 64+63 => 127
 * 
 * 0 1 1 1 1 1 1 1 => 8비트 = 1바이트 (최대로 가질수 있는 값 127 최소 -128)
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 */
public class DataTypeEx {
	
	public static void main(String[] args) {
		//정수형 타입(byte(1byte or 8bit)), short, int(default type), long
		/*
		 * byte 타입(-128 ~ 127) 범위의 정수를 담는 타입.
		 * 수치 연산할 때는 안씁니다. 나중에 stream 이라는거 할 때 사용될 예정입니다.
		 * 하나만 말하자면 여러분이 채팅할 때 모든 문자열은 byte로 변경되어서 나갑니다.
		 */
		
		byte b;//byte type b 변수 선언함.
		b = -128;
		
		//자바의 변수 선언 및 대입, 초기화 하는 예제.
		//또 하나는 지역 내에서(클래스, 메서드 모두) 재선언시 에러 발생 예제도 포함.
		
		//byte b = 20;// 컴파일 에러.. 같은 지역에선 재선언 불가능합니다.
		//b = 1//; 빠져서 에러.. 무조건 구문 끝에는 ; 넣어야합니다 (루프(do while 제외),
				//if 제외)
		
		//같은 타입의 변수 한번에 선언하기.
		byte c,d,e,f;//좌 변수는 모두 byte 타입임.
		c = d = e = f = 0;//모두 0으로 대입하기.
		
		//콘솔에 출력하기 System.out.println(내용) --> 출력 후 라인변경
		//System.out.print(내용) --> 출력 후 커서 위치 출력결과 바로옆
		
		System.out.print(c);
		System.out.println(c + ":" + d);
		
		//문자열과 + 타른타입 이 만나면 결과는 모두 문자열임 (String...JS 와 같음)
		String cc = "1" +1;
		
		//gg, oo, jj 라는 변수를 모두 byte 로 선언 후 다음과 같이 하세요
		//gg 는 선언 후 10을 대입, oo는 gg의 값을 대입
		//jj -100 으로 초기화 후 모두 출력하세요.
		
		byte gg;
		gg = 10;
		byte oo;
		oo = gg;
		byte jj = -100;
		System.out.println(gg);
		System.out.println(oo);
		System.out.println(jj);
		
		//short 데이터 타입(2byte 정수형 타입)
		//대략 -32,768 ~ +32,767 까지의 범위를 갖습니다.
		//이 short 는 자바에서는 사용되지 않는 타입이니 크기와 개념만 알고가세요.
		
		System.out.println(Short.MAX_VALUE);
		System.out.println(Short.MIN_VALUE);
		
		
		short s = c;//바이트 값을 short 에 대입--타입 프로모션
		
		s = 30000;
		
		d = (byte)s;//캐스팅 연산수행.. 단 결과는 상위 8비트는 모두 삭제 되어지고 나머지
		//8비트의 값만 대입됩니다.
		
		System.out.println(d);
		
		//정수의 기본타입인 int 에 대해 알아봅시다.
		//4byte 의 크기를 갖고 범위는 찍어보세요.
		
		
		System.out.println(Integer.MAX_VALUE);
		
		
		s = 0; //short 타입
		d = 0; //byte 타입
	
		int s2 = s + d;
		
		int st = s + 0;
		
		
		//long 형 : 8byte의 정수타입이며, 정숴의 무한대영역의 값을 담습니다.
		//long 형은 값 대입시 끝에 대문자 L 을 넣어서 표시해 주면 좋습니다.
		
		long lo = 10L;
		
		long res = 10 + lo;
		
		//이번에 실수형 타입을 봅니다.
		//float(4byte), double(8byte default type)
		
		System.out.println(Float.MAX_VALUE);
		
		
		float fl = 3.14F;//리터럴//float 은 값 끝에 f or F 를 넣어서 표기해준다.
		
		lo = (long)fl;//캐스팅을 통한 대입 OK..But 소숫점 이하는 절삭된 정분 부분만 넘어감
		System.out.println(lo);
		
		
		double ff = 1 + 3.14;
		
		/*
		 * Fruit 이라는 클래스를 만들어서 아래의 로직을 main() 에 정의하고
		 * 결과를 출력하세요
		 * 
		 * 여러분이 과수원을 경영하고 있습니다.
		 * 과일로는 사과, 배, 오렌지가 있고,
		 * 각각 하루에 총 생산량은 7, 5, 5 개 입니다.
		 * 위 생산량을 기준으로 하루에 시간당 평균 몇개의 과일이 생산되어지는지에 대한
		 * 평균을 내어 다음처럼 출력하세요.
		 * 
		 * 3과일의 하루 24시간 기준 시간당 생산량 : 3.145....~
		 * 
		 * 조건 1. 반드시 한번의 히터럴 데이터를 이용하세요.
		 * 2. 반드시 한번의 케스팅 연산자를 이용하세요(우선순위 꼭 확인하세요)
		 * 3. 모든 데이터는 반드시 변수에 담아서 활용하세요(리터럴 제외)
		 */
		
		
		
		
		
		
		
		/*
		 * 수치형 타입의 연산 시 발생되는 연산 수행 단계에 대해 설명합니다.
		 * 
		 * 자바에서는 정수의 기본 타입은 int 입니다. 기본 타입이라고 하는말은
		 * 코드에서 100, 300, 25000 즉 int 범위를 넘지 않는 리터럴을 사용하면
		 * VM 에서는 기본형인 int 메모리(32bit, 4byte) 를 만들어서 값을 대입 시킵니다.
		 * 그렇기 때문에 기본형이라고 하고, 이는 다시  연산자를 만났을때도 아래처럼 적용됩니다.
		 * 
		 * 기본형 이하의 타입끼리 연산시엔 두 피연산자(변수)의 타입을 기본형(int) 로 변경 후
		 * 연산을 하게 됩니다. 이 말은 byte + short 의 연산이 될때 두타입을 먼저
		 * int 와 int 로 변경 후 int 로 리턴한다는 뜻입니다.
		 * 
		 * 만약 int 보다 큰 타입과의 연산시엔 더 큰타입으로 먼저 변경 후 연산, 결과를 리턴합니다..
		 * 당연히 두개의 피연산자중 큰타입으로 변경되어 리턴되어집니다.
		 * 
		 * 아래의 내용은 반드시 기억하세요.
		 * 
		 * 데이터타입 프로모션 : 작은 타입의 변수의 값을 큰 타입에 대입하면, 그 값의 타입은
		 * 자동으로 큰 타입으로 변경되어 집니다. 따라서 대입을 할 때도 이 개념을 생각해서
		 * 타입 결정을 해야합니다.
		 * 
		 * 데이터타입 케스팅(Casting) : 큰 타입의 데이터(변수)를 작은 타입에 대입 할 때
		 * 기본적으로는 컴파일 에러입니다(type mismatch). 하지만 때에 따라선 그렇게 해야 하는데,
		 * 이때 사용되는 대표적 연산자인 casting 연산자 (type) 을 사용해서
		 * 타입을 작게 변형해야 합니다.
		 * 
		 * 이 연산자는 우선순위가 2번재로 높고, 우측항 하나만 영향을 미치게됩니다.
		 * 
		 * 이 주석내용들은 반드시 머리에 숙지해야합니다. 반드시!
		 * 
		 */
		
		/*
		 * 문자데이터 char(2byte - 음수가 없는 양의 수인 정수타입) 에 대해서 알아봅니다.
		 * 
		 * 자바에서는 문자(문자하나) 를 취급하기에 char type 을 사용하고 
		 * 내부적으로는 정수로 처리합니다. 이유는 JS 때 강의했듯이,
		 * 유니코드를 기본 문자셋으로 자바에서 사용하기에, 해당 문자셋을 적용하는 정수를 사용합니다.
		 * 
		 * 정수이긴 하지만 음수가 없는 형태이기에 정수 타입의 데이터들과는 호환성에
		 * 주의를 해야 합니다. 아래는 그 예입니다.
		 * 
		 */
	char ch = 'A'; // 문자를 표현하기 위한 표식으로 ''를 사용합니다.
	char ch2 = 'B';
		
	int so = ch;
	System.out.println((char)++so);
		
	char fName = '김';
	System.out.println(Integer.toHexString(fName));
	
	char fName2 = '\uae40';//unicode 값의 문자 값 대입..
	System.out.println(fName2);
	
	
	//boolean 형 : true or false 만 갖는 타입.
	//JS 와는 다르게 정수 0/1 을 값으로 못가집니다. only true or false 만 받음
	
	boolean uFun = true;
	
	if(uFun) {
		System.out.println("다행입니다 앞으로도 화이팅");
	}else {
		System.out.println("어려우면 도와줌");
	}
		
		
		
		
		
		
		
		
		
		
	}
}
